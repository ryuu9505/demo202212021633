spring:
  config:
    activate:
      on-profile: "ops"
---
spring:
  config:
    activate:
      on-profile: "dev"
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 980809599927-ov7r8ib4qdfn24oeeedujpspifnrcb08.apps.googleusercontent.com
            client-secret: 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
            scope: openid,profile,email
          naver:
            client-id: ibAam66ZZjkRkHSbX93T
            client-secret: wIzZSQYPic
            authorization-grant-type: authorization_code
            client-name: naver-client-app
            redirect-uri: http://localhost:8081/login/oauth2/code/naver
            scope: profile,email,nickname
          kakao:
            client-id: a025eb8b8a76eb413ab8b460896775e0
            client-secret: yDFQJRE3qAvdO59jgCSbJvkI78JghqjB
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: client-app
            redirect-uri: http://localhost:8081/login/oauth2/code/kakao
            scope: openid,profile_nickname,profile_image,account_email
        #                        scope: profile_nickname,profile_image,account_email
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            # OpenID Connect 일 경우 jwkSet URI 를 가져와야 하기 때문에 필수항목
            issuer-uri: https://kauth.kakao.com
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id # OpenID Connect 로 인가서버와 통신하지 않을 경우
            # OpenID Connect 일 경우 nameAttributeKey 가 sub 이기 때문에 별도의 커스트 마이징이 필요
            # CustomOidcUserService 참조
            # user-name-attribute: sub